name: Deploy to production

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: saras-gurukul
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-defination@V1
        with:
          task-definition: arn:aws:ecs:ap-south-1:058264278444:task-definition/WebApp:1
          container-name: webAppContainer
          image: 058264278444.dkr.ecr.ap-south-1.amazonaws.com/saras-gurukul:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-render-task-defination@V1
        with:
          task-definition: arn:aws:ecs:ap-south-1:058264278444:task-definition/WebApp:1
          service: webAppService
          cluster: sarasgurukul
          wait-for-service-stability: true
